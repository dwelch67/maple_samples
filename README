

These examples are for the leaf labs maple boards

http://leaflabs.com/devices/

Initial examples are for the maple mini, in the mini directory.

---- mini ----

http://leaflabs.com/docs/hardware/maple-mini.html

To get schematics you need to go here

git clone git://github.com/leaflabs/maplemini.git

The microcontroller is an STM32F103CBT6, you want to go here

http://www.st.com/internet/mcu/product/189782.jsp

And get the reference manual RM0008

http://www.st.com/internet/com/TECHNICAL_RESOURCES/TECHNICAL_LITERATURE/REFERENCE_MANUAL/CD00171190.pdf

Start with the blinker01 example and go from there.

My mbed_samples repo has a lot of text written about getting and how
to use the compilers.  My raspberry pi repo has a build_gcc script
for building your own gnu based ARM cross compiler toolchain from
sources.

---- bootloader ----

The maple bootloader is found here

git clone git://github.com/leaflabs/maple-bootloader.git

It supports dfu, I have had success using this version of dfu-util



//http://gitorious.org/~tormod/unofficial-clones/dfuse-dfu-util (obsolete)
//http://dfu-util.gnumonks.org/releases/
//git clone git://git.openezx.org/dfu-util
//dfu-util -c 1 -i 0 -a 1 -D blinker03.gcc.thumb.bin



I used to use this one but it has been merged into the main so it is
obsolete
http://gitorious.org/~tormod/unofficial-clones/dfuse-dfu-util

The main page appears to be here
//http://dfu-util.gnumonks.org/releases/

you can get the source above or with git
git clone git://git.openezx.org/dfu-util

If you used git then
./autogen.sh

from the tarball or git then:
./configure
make
make install

To write a program to the board, get ready to run the command below,
press the reset button, the led will blink fast then slow, when it
starts to blink slow then run the:

dfu-util -c 1 -i 0 -a 1 -D myprogram.bin

Once loaded then press the reset button again and after the bootloader
does its led blinks then your program will run.
